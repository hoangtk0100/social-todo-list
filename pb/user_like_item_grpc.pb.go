// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: proto/user_like_item.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UserLikeItemServiceClient is the client API for UserLikeItemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserLikeItemServiceClient interface {
	GetItemLikes(ctx context.Context, in *GetItemLikesRequest, opts ...grpc.CallOption) (*GetItemLikesResponse, error)
}

type userLikeItemServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserLikeItemServiceClient(cc grpc.ClientConnInterface) UserLikeItemServiceClient {
	return &userLikeItemServiceClient{cc}
}

func (c *userLikeItemServiceClient) GetItemLikes(ctx context.Context, in *GetItemLikesRequest, opts ...grpc.CallOption) (*GetItemLikesResponse, error) {
	out := new(GetItemLikesResponse)
	err := c.cc.Invoke(ctx, "/pb.UserLikeItemService/GetItemLikes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserLikeItemServiceServer is the server API for UserLikeItemService service.
// All implementations should embed UnimplementedUserLikeItemServiceServer
// for forward compatibility
type UserLikeItemServiceServer interface {
	GetItemLikes(context.Context, *GetItemLikesRequest) (*GetItemLikesResponse, error)
}

// UnimplementedUserLikeItemServiceServer should be embedded to have forward compatible implementations.
type UnimplementedUserLikeItemServiceServer struct {
}

func (UnimplementedUserLikeItemServiceServer) GetItemLikes(context.Context, *GetItemLikesRequest) (*GetItemLikesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemLikes not implemented")
}

// UnsafeUserLikeItemServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserLikeItemServiceServer will
// result in compilation errors.
type UnsafeUserLikeItemServiceServer interface {
	mustEmbedUnimplementedUserLikeItemServiceServer()
}

func RegisterUserLikeItemServiceServer(s grpc.ServiceRegistrar, srv UserLikeItemServiceServer) {
	s.RegisterService(&UserLikeItemService_ServiceDesc, srv)
}

func _UserLikeItemService_GetItemLikes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemLikesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLikeItemServiceServer).GetItemLikes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserLikeItemService/GetItemLikes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLikeItemServiceServer).GetItemLikes(ctx, req.(*GetItemLikesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UserLikeItemService_ServiceDesc is the grpc.ServiceDesc for UserLikeItemService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserLikeItemService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserLikeItemService",
	HandlerType: (*UserLikeItemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetItemLikes",
			Handler:    _UserLikeItemService_GetItemLikes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/user_like_item.proto",
}
